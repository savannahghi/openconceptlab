apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  labels:
    {{- include "openconceptlab.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "openconceptlab.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "openconceptlab.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: celery-beat
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "bash", "-c" ]
          args: [
              "./start_celery_beat.sh"
          ]
          ports:
            - name: http
              containerPort: {{ .Values.service.backendport }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
            
          env:
            - name: REDIS_HOST
              value: {{ .Values.app.container.env.redisHost | quote }}

            - name: REDIS_PORT
              value: {{ .Values.app.container.env.redisPort | quote }}

            - name: DB_HOST
              value: {{ .Values.app.container.env.dbHost | quote }}

            - name: DB_PORT
              value: {{ .Values.app.container.env.dbPort | quote }}

            - name: API_HOST
              value: {{ .Values.app.container.env.redisHost | quote }}

            - name: API_PORT
              value: {{ .Values.app.container.env.redisPort | quote }}

            - name: DEBUG
              value: {{ .Values.app.container.env.debug | quote }}


        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.33.2
          command: [
            "/cloud_sql_proxy",
            "-instances={{ .Values.app.container.env.databaseInstanceConnectionName }}=tcp:5432",
            "-credential_file={{ .Values.app.container.env.googleApplicationCredentialsSecret.filePath }}"]

          securityContext:
            runAsNonRoot: false
            allowPrivilegeEscalation: false

          volumeMounts:
          - name: {{ .Values.app.container.env.googleApplicationCredentialsSecret.name }}
            mountPath: {{ .Values.app.container.env.googleApplicationCredentialsSecret.mountPath }}
            readOnly: true

      volumes:
        - name: {{ .Values.app.container.env.googleApplicationCredentialsSecret.name }}
          secret:
            secretName: {{ .Values.app.container.env.googleApplicationCredentialsSecret.name }}
